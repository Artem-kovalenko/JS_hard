// Всё что нужно знать о прототипах
// Прототип - определенный обьект, который присутствует у обьектов и вызывается по цепочке сверху вниз
// с его помошью мы расширяем свойства обьектов или классов, можем делать наследование в JS

// Пример создания обьекта №1

const person = {
	name: 'Artem',
	age: 18,
	greet: function() {
		console.log('Greet!')
	}
}

// У обьктов есть прототип
// __proto__: Object - свойсто, ссылка на прототип обьекта
// Object - название родительского класса, который является родителем для данного обьекта
// у него есть свои методы, например toString --- при вызове, ищем в нашем обьекте, если не находим, то идём в прототип


// Пример создания обьекта №2 

const student = new Object(  // student - инстанс класса Object
	// Конструктор обьекта
	{
	name: 'Artem',
	age: 18,
	greet: function() {
		console.log('Greet!')
	}
	// здесь будет находиться прототип класса Object (__proto__)
})
// Прототип - тот же обьект, но присутствует у глобальных сущьностей


// Можно создать новые поля у прототипа
// Обращаемся к Object с помощью .prototype
Object.prototype.sayHello = function() {
	console.log('Hello!')
}
// расширил базовый прототип класса Object и добавили новый метод


// у глобаольного класса Object есть метод create()
// Create() - создаёт новые обьекты, можем передать какой-то обьект, он будет являться прототипом для lena
const lena = Object.create(student)
lena.name = 'Elena'
// Мы получили пустой обьект lena, но с прототипом - обьект student, можно использовать свойства этого обьекта
// Также у обьекта student есть прототип __proto__, его свойства так же можно использовать обращаясь к lena

// Как это работает?
// Прототип идёт сверху вниз, если он находит поле или функцию, сразу вызвает
// Если нет, обращается к прототипу и пытается найти там, и так до самого низа, в конце - ошибка(если ничего не найдено)


// ВСЁ в JS является ОБЬЕКТАМИ
const str = 'I am string'
// создадим строку через глобальный класс new String
const str2 = new String('I am string2')
// у строки так же есть прототип, там есть методы которыми мы пользуемся
// следовательно строка - тоже обьект

// класс Object - самый главный в js